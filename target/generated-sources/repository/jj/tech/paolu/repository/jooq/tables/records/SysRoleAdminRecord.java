/*
 * This file is generated by jOOQ.
 */
package jj.tech.paolu.repository.jooq.tables.records;


import jj.tech.paolu.repository.jooq.tables.SysRoleAdmin;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRoleAdminRecord extends UpdatableRecordImpl<SysRoleAdminRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.SYS_ROLE_ADMIN.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.SYS_ROLE_ADMIN.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.SYS_ROLE_ADMIN.ADMIN_ID</code>.
     */
    public void setAdminId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.SYS_ROLE_ADMIN.ADMIN_ID</code>.
     */
    public Long getAdminId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.SYS_ROLE_ADMIN.ROLE_ID</code>.
     */
    public void setRoleId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.SYS_ROLE_ADMIN.ROLE_ID</code>.
     */
    public Long getRoleId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SysRoleAdmin.SYS_ROLE_ADMIN.ID;
    }

    @Override
    public Field<Long> field2() {
        return SysRoleAdmin.SYS_ROLE_ADMIN.ADMIN_ID;
    }

    @Override
    public Field<Long> field3() {
        return SysRoleAdmin.SYS_ROLE_ADMIN.ROLE_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getAdminId();
    }

    @Override
    public Long component3() {
        return getRoleId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getAdminId();
    }

    @Override
    public Long value3() {
        return getRoleId();
    }

    @Override
    public SysRoleAdminRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public SysRoleAdminRecord value2(Long value) {
        setAdminId(value);
        return this;
    }

    @Override
    public SysRoleAdminRecord value3(Long value) {
        setRoleId(value);
        return this;
    }

    @Override
    public SysRoleAdminRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysRoleAdminRecord
     */
    public SysRoleAdminRecord() {
        super(SysRoleAdmin.SYS_ROLE_ADMIN);
    }

    /**
     * Create a detached, initialised SysRoleAdminRecord
     */
    public SysRoleAdminRecord(Long id, Long adminId, Long roleId) {
        super(SysRoleAdmin.SYS_ROLE_ADMIN);

        setId(id);
        setAdminId(adminId);
        setRoleId(roleId);
    }

    /**
     * Create a detached, initialised SysRoleAdminRecord
     */
    public SysRoleAdminRecord(jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin value) {
        super(SysRoleAdmin.SYS_ROLE_ADMIN);

        if (value != null) {
            setId(value.getId());
            setAdminId(value.getAdminId());
            setRoleId(value.getRoleId());
        }
    }
}
