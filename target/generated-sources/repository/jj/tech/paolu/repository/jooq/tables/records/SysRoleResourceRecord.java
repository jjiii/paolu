/*
 * This file is generated by jOOQ.
 */
package jj.tech.paolu.repository.jooq.tables.records;


import jj.tech.paolu.repository.jooq.tables.SysRoleResource;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SysRoleResourceRecord extends UpdatableRecordImpl<SysRoleResourceRecord> implements Record2<Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.SYS_ROLE_RESOURCE.ROLE_ID</code>.
     */
    public void setRoleId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.SYS_ROLE_RESOURCE.ROLE_ID</code>.
     */
    public Long getRoleId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.SYS_ROLE_RESOURCE.RES_ID</code>.
     */
    public void setResId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.SYS_ROLE_RESOURCE.RES_ID</code>.
     */
    public Long getResId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Long, Long> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Long, Long> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return SysRoleResource.SYS_ROLE_RESOURCE.ROLE_ID;
    }

    @Override
    public Field<Long> field2() {
        return SysRoleResource.SYS_ROLE_RESOURCE.RES_ID;
    }

    @Override
    public Long component1() {
        return getRoleId();
    }

    @Override
    public Long component2() {
        return getResId();
    }

    @Override
    public Long value1() {
        return getRoleId();
    }

    @Override
    public Long value2() {
        return getResId();
    }

    @Override
    public SysRoleResourceRecord value1(Long value) {
        setRoleId(value);
        return this;
    }

    @Override
    public SysRoleResourceRecord value2(Long value) {
        setResId(value);
        return this;
    }

    @Override
    public SysRoleResourceRecord values(Long value1, Long value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SysRoleResourceRecord
     */
    public SysRoleResourceRecord() {
        super(SysRoleResource.SYS_ROLE_RESOURCE);
    }

    /**
     * Create a detached, initialised SysRoleResourceRecord
     */
    public SysRoleResourceRecord(Long roleId, Long resId) {
        super(SysRoleResource.SYS_ROLE_RESOURCE);

        setRoleId(roleId);
        setResId(resId);
    }

    /**
     * Create a detached, initialised SysRoleResourceRecord
     */
    public SysRoleResourceRecord(jj.tech.paolu.repository.jooq.tables.pojos.SysRoleResource value) {
        super(SysRoleResource.SYS_ROLE_RESOURCE);

        if (value != null) {
            setRoleId(value.getRoleId());
            setResId(value.getResId());
        }
    }
}
