/*
 * This file is generated by jOOQ.
 */
package jj.tech.paolu.repository.jooq.tables.records;


import jj.tech.paolu.repository.jooq.tables.UserInfo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserInfoRecord extends UpdatableRecordImpl<UserInfoRecord> implements Record5<Long, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.USER_INFO.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.USER_INFO.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.USER_INFO.REAL_NAME</code>.
     */
    public void setRealName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.USER_INFO.REAL_NAME</code>.
     */
    public String getRealName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.USER_INFO.USER_NAME</code>.
     */
    public void setUserName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.USER_INFO.USER_NAME</code>.
     */
    public String getUserName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.USER_INFO.PASSWORD</code>.
     */
    public void setPassword(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.USER_INFO.PASSWORD</code>.
     */
    public String getPassword() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.USER_INFO.HEAD_IMG</code>.
     */
    public void setHeadImg(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.USER_INFO.HEAD_IMG</code>.
     */
    public String getHeadImg() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, String, String, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, String, String, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserInfo.USER_INFO.ID;
    }

    @Override
    public Field<String> field2() {
        return UserInfo.USER_INFO.REAL_NAME;
    }

    @Override
    public Field<String> field3() {
        return UserInfo.USER_INFO.USER_NAME;
    }

    @Override
    public Field<String> field4() {
        return UserInfo.USER_INFO.PASSWORD;
    }

    @Override
    public Field<String> field5() {
        return UserInfo.USER_INFO.HEAD_IMG;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRealName();
    }

    @Override
    public String component3() {
        return getUserName();
    }

    @Override
    public String component4() {
        return getPassword();
    }

    @Override
    public String component5() {
        return getHeadImg();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRealName();
    }

    @Override
    public String value3() {
        return getUserName();
    }

    @Override
    public String value4() {
        return getPassword();
    }

    @Override
    public String value5() {
        return getHeadImg();
    }

    @Override
    public UserInfoRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserInfoRecord value2(String value) {
        setRealName(value);
        return this;
    }

    @Override
    public UserInfoRecord value3(String value) {
        setUserName(value);
        return this;
    }

    @Override
    public UserInfoRecord value4(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public UserInfoRecord value5(String value) {
        setHeadImg(value);
        return this;
    }

    @Override
    public UserInfoRecord values(Long value1, String value2, String value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserInfoRecord
     */
    public UserInfoRecord() {
        super(UserInfo.USER_INFO);
    }

    /**
     * Create a detached, initialised UserInfoRecord
     */
    public UserInfoRecord(Long id, String realName, String userName, String password, String headImg) {
        super(UserInfo.USER_INFO);

        setId(id);
        setRealName(realName);
        setUserName(userName);
        setPassword(password);
        setHeadImg(headImg);
    }

    /**
     * Create a detached, initialised UserInfoRecord
     */
    public UserInfoRecord(jj.tech.paolu.repository.jooq.tables.pojos.UserInfo value) {
        super(UserInfo.USER_INFO);

        if (value != null) {
            setId(value.getId());
            setRealName(value.getRealName());
            setUserName(value.getUserName());
            setPassword(value.getPassword());
            setHeadImg(value.getHeadImg());
        }
    }
}
