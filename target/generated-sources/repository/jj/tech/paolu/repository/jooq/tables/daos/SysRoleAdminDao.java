/*
 * This file is generated by jOOQ.
 */
package jj.tech.paolu.repository.jooq.tables.daos;


import java.util.List;
import java.util.Optional;

import jj.tech.paolu.repository.jooq.tables.SysRoleAdmin;
import jj.tech.paolu.repository.jooq.tables.records.SysRoleAdminRecord;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SysRoleAdminDao extends DAOImpl<SysRoleAdminRecord, jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin, Long> {

    /**
     * Create a new SysRoleAdminDao without any configuration
     */
    public SysRoleAdminDao() {
        super(SysRoleAdmin.SYS_ROLE_ADMIN, jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin.class);
    }

    /**
     * Create a new SysRoleAdminDao with an attached configuration
     */
    @Autowired
    public SysRoleAdminDao(Configuration configuration) {
        super(SysRoleAdmin.SYS_ROLE_ADMIN, jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin.class, configuration);
    }

    @Override
    public Long getId(jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SysRoleAdmin.SYS_ROLE_ADMIN.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ID IN (values)</code>
     */
    public List<jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin> fetchById(Long... values) {
        return fetch(SysRoleAdmin.SYS_ROLE_ADMIN.ID, values);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin fetchOneById(Long value) {
        return fetchOne(SysRoleAdmin.SYS_ROLE_ADMIN.ID, value);
    }

    /**
     * Fetch a unique record that has <code>ID = value</code>
     */
    public Optional<jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin> fetchOptionalById(Long value) {
        return fetchOptional(SysRoleAdmin.SYS_ROLE_ADMIN.ID, value);
    }

    /**
     * Fetch records that have <code>ADMIN_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin> fetchRangeOfAdminId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SysRoleAdmin.SYS_ROLE_ADMIN.ADMIN_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ADMIN_ID IN (values)</code>
     */
    public List<jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin> fetchByAdminId(Long... values) {
        return fetch(SysRoleAdmin.SYS_ROLE_ADMIN.ADMIN_ID, values);
    }

    /**
     * Fetch records that have <code>ROLE_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin> fetchRangeOfRoleId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SysRoleAdmin.SYS_ROLE_ADMIN.ROLE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ROLE_ID IN (values)</code>
     */
    public List<jj.tech.paolu.repository.jooq.tables.pojos.SysRoleAdmin> fetchByRoleId(Long... values) {
        return fetch(SysRoleAdmin.SYS_ROLE_ADMIN.ROLE_ID, values);
    }
}
