<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/jdbc 
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
		
		<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list> 
					<value>classpath:/properties/db.properties</value> 
				</list>
			</property>
			<property name="fileEncoding" value="utf-8" />
			<property name="ignoreUnresolvablePlaceholders" value="true" />   
		</bean>
		
		<!-- 数据源：db_salesman -->
		<bean id="fcpay" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
			<property name="url" value="${url}" />
			<property name="username" value="${username}" />
			<property name="password" value="${password}" />
			<property name="initialSize" value="#{T(java.lang.Integer).parseInt('${initialSize}')}" />
			<property name="minIdle" value="${minIdle}" />
			<property name="maxActive" value="${maxActive}" />
			<property name="maxWait" value="${maxWait}" />
			<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
			<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
			<property name="validationQuery" value="${validationQuery}" />
			<property name="testWhileIdle" value="${testWhileIdle}" />
			<property name="testOnBorrow" value="${testOnBorrow}" />
			<property name="testOnReturn" value="${testOnReturn}" />
			<property name="poolPreparedStatements" value="${poolPreparedStatements}" />
			<property name="maxPoolPreparedStatementPerConnectionSize" value="${maxPoolPreparedStatementPerConnectionSize}" />
			<property name="filters" value="${filters}" />
		</bean>

		
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="fcpay" />
			<property name="typeAliasesPackage" value="com.fc.pay.*.entity.*" />
			<property name="mapperLocations">
				<list><value>classpath*:/com/fc/pay/*/dao/impl/*.xml</value></list>
			</property>
			
		</bean>

		<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
			<property name="basePackage" value="com.fc.pay.*.dao" />
		</bean>

		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="fcpay" />
		</bean>
		
		<tx:annotation-driven transaction-manager="transactionManager" />
		
		<!--需要可以引用 -->
		<bean id="jdbcTemplate_pay"  class="org.springframework.jdbc.core.JdbcTemplate">
			<property name = "dataSource" ref="fcpay"></property>
		</bean>

</beans>