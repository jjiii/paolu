<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans.xsd
	   http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd 
       http://www.springframework.org/schema/aop 
	   http://www.springframework.org/schema/aop/spring-aop.xsd
	   http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context.xsd">
	   
	   	<!-- quartz properties -->
	   	<!--  
		<bean id="quartzDbPropertyConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
				<list>
					<value>classpath:quartz_db.properties</value>
				</list>
			</property>
			<property name="fileEncoding" value="utf-8" />
		</bean>
		-->
		
		<!-- quartzDataSource -->
		<bean id="quartzDataSource" class="com.alibaba.druid.pool.DruidDataSource"
			init-method="init" destroy-method="close">
			<property name="url" value="${quartz_url}" />
			<property name="username" value="${quartz_username}" />
			<property name="password" value="${quartz_password}" />
			<property name="initialSize"
				value="#{T(java.lang.Integer).parseInt('${quartz_initialSize}')}" />
			<property name="minIdle" value="${quartz_minIdle}" />
			<property name="maxActive" value="${quartz_maxActive}" />
			<property name="maxWait" value="${quartz_maxWait}" />
			<property name="timeBetweenEvictionRunsMillis" value="${quartz_timeBetweenEvictionRunsMillis}" />
			<property name="minEvictableIdleTimeMillis" value="${quartz_minEvictableIdleTimeMillis}" />
			<property name="validationQuery" value="${quartz_validationQuery}" />
			<property name="testWhileIdle" value="${quartz_testWhileIdle}" />
			<property name="testOnBorrow" value="${quartz_testOnBorrow}" />
			<property name="testOnReturn" value="${quartz_testOnReturn}" />
			<property name="poolPreparedStatements" value="${quartz_poolPreparedStatements}" />
			<property name="maxPoolPreparedStatementPerConnectionSize"
				value="${quartz_maxPoolPreparedStatementPerConnectionSize}" />
			<property name="filters" value="${quartz_filters}" />
		</bean>
	   
	   <bean id="quartzScheduler"
		    class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		    <!-- 自定义的bean注入类，解决job里面无法注入spring的service的问题 -->
		    <property name="jobFactory">
            	<bean class="com.fc.pay.common.spring.SpringBeanJobFactory" />
        	</property>		    
		    <!-- quartz的数据源 -->
		    <property name="dataSource" ref="quartzDataSource" />
		    <!-- quartz的基本配置信息引入 -->
		    <property name="configLocation" value="classpath:/properties/quartz_run.properties"/>		    
			<!-- 调度标识名 -->
		    <property name="schedulerName" value="FCPayBillQuartzScheduler" />		
		    <!--必须的，QuartzScheduler 延时启动，应用启动完后 QuartzScheduler 再启动 -->
		    <property name="startupDelay" value="30" />
			<!-- 通过applicationContextSchedulerContextKey属性配置spring上下文 -->
		    <property name="applicationContextSchedulerContextKey" value="applicationContextKey" />		
		    <!--可选，QuartzScheduler 启动时更新己存在的Job，这样就不用每次修改targetObject后删除qrtz_job_details表对应记录了 -->
		    <property name="overwriteExistingJobs" value="true" />		
		    <!-- 设置自动启动 -->
		    <property name="autoStartup" value="true" />
		    <!-- 注册作业 -->
		    <property name="jobDetails">
		        <list>
		        	<ref bean="billBizDailyCheckMainJob" />
		        	<ref bean="billBizDailyDoubtClearJob" />
		        </list>
		    </property>	
		    <!-- 注册触发器 -->
		    <property  name="triggers">
		        <list>
		            <ref bean="billBizDailyCheckMainJobTrigger" />
		            <ref bean="billBizDailyDoubtClearJobTrigger" />
		        </list>
		    </property>		    
		</bean>
  		  
	    <!--业务日对账作业-->  
	    <bean id="billBizDailyCheckMainJob"  
	        class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
	       <property name="jobClass" value="com.fc.pay.bill.job.BillBizDailyCheckMainJob"/>
			<property name="durability" value="true" />	
			<property name="requestsRecovery" value="true" /> 			
	    </bean>
	    
	    <!--对账存疑清理作业-->  
	    <bean id="billBizDailyDoubtClearJob"  
	        class="org.springframework.scheduling.quartz.JobDetailFactoryBean">  
	       <property name="jobClass" value="com.fc.pay.bill.job.BillBizDailyDoubtClearJob"/>
			<property name="durability" value="true" />	
			<property name="requestsRecovery" value="true" /> 			
	    </bean>
	      
	    <!--业务日对账作业触发器-->  
	    <bean id="billBizDailyCheckMainJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	        <property name="jobDetail" ref="billBizDailyCheckMainJob" />  
	        <property name="cronExpression">  
	            <!-- 每天上午00:30点执行任务调度 -->  
	            <!-- <value>0 30 00 * * ?</value> -->
	            <!-- <value>0/30 * * * * ?</value> -->
	            <!-- 每天上午03:00点执行任务调度 -->  
	            <!-- <value>0 00 11 * * ?</value> -->
	            <!-- 每小时第1分钟执行一次 -->
	            <value>0 1 * * * ?</value>
	        </property>  
	    </bean>
	    
	    <!--对账存疑清理作业触发器-->  
	    <bean id="billBizDailyDoubtClearJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">  
	        <property name="jobDetail" ref="billBizDailyDoubtClearJob" />  
	        <property name="cronExpression">  
	            <!-- 每天上午00:30点执行任务调度 -->  
	            <!-- <value>0 30 00 * * ?</value> -->
	            <!-- <value>0/30 * * * * ?</value> -->
	            <!-- 每天上午03:00点执行任务调度 -->  
	            <!-- <value>0 00 11 * * ?</value> -->
	            <!-- 每小时第1分钟执行一次 -->
	            <value>0 1 * * * ?</value>
	        </property>  
	    </bean>

</beans> 