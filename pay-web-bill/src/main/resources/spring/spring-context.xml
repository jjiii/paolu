<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/jdbc 
    http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
    http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<context:component-scan base-package="com.fc.pay.bill.*, com.fc.pay.trade.*, com.fc.pay.common.*"/>

	<!-- properties -->
	<bean id="payDbPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:/properties/db.properties</value>
				<value>classpath:/properties/quartz_db.properties</value>
			</list>
		</property>
		<property name="fileEncoding" value="utf-8" />
	</bean>

	<!-- datasource -->
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
		<property name="initialSize"
			value="#{T(java.lang.Integer).parseInt('${initialSize}')}" />
		<property name="minIdle" value="${minIdle}" />
		<property name="maxActive" value="${maxActive}" />
		<property name="maxWait" value="${maxWait}" />
		<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}" />
		<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}" />
		<property name="validationQuery" value="${validationQuery}" />
		<property name="testWhileIdle" value="${testWhileIdle}" />
		<property name="testOnBorrow" value="${testOnBorrow}" />
		<property name="testOnReturn" value="${testOnReturn}" />
		<property name="poolPreparedStatements" value="${poolPreparedStatements}" />
		<property name="maxPoolPreparedStatementPerConnectionSize"
			value="${maxPoolPreparedStatementPerConnectionSize}" />
		<property name="filters" value="${filters}" />
	</bean>

	<!-- mybatis -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <property name="typeAliasesPackage" value="com.fc.pay.*.entity" />
        <property name="configLocation" value="classpath:/spring/mybatis-config.xml" />  
        <property name="mapperLocations" value="classpath*:com/fc/pay/*/dao/impl/*Mapper.xml" />  
        <property name="plugins">
			<list><ref bean="statementHandlerInterceptor" /></list>
		</property>
    </bean>
    <bean id="statementHandlerInterceptor" class="com.fc.pay.common.system.mybatis.StatementHandlerInterceptor" />  
    
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.fc.pay.*.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />  
    </bean>  
    
	<!-- 声明式事务 -->
	<!-- transactionManager -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- transaction-AOP -->
	<!-- 
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">  
        <tx:attributes>  
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />   
            <tx:method name="modify*" propagation="REQUIRED" />  
            <tx:method name="handle*" propagation="REQUIRED" />
            <tx:method name="prepare*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="SUPPORTS" />  
            <tx:method name="list*" propagation="SUPPORTS" />  
            <tx:method name="page*" propagation="SUPPORTS" />         
            <tx:method name="*" propagation="SUPPORTS" />  
        </tx:attributes>  
    </tx:advice>
    <aop:config>  
        <aop:pointcut id="transactionPointcut" 
        	expression="execution(public * com.fc.pay.bill.service.impl.*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" 
        	advice-ref="transactionAdvice" />  
    </aop:config>
     -->

	<import resource="classpath:/spring/spring-quartz.xml" />
	<!-- <import resource="classpath:/spring/spring-job.xml" /> -->
	
</beans>